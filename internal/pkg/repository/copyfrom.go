// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: copyfrom.go

package repository

import (
	"context"
)

// iteratorForCreateOrderItems implements pgx.CopyFromSource.
type iteratorForCreateOrderItems struct {
	rows                 []CreateOrderItemsParams
	skippedFirstNextCall bool
}

func (r *iteratorForCreateOrderItems) Next() bool {
	if len(r.rows) == 0 {
		return false
	}
	if !r.skippedFirstNextCall {
		r.skippedFirstNextCall = true
		return true
	}
	r.rows = r.rows[1:]
	return len(r.rows) > 0
}

func (r iteratorForCreateOrderItems) Values() ([]interface{}, error) {
	return []interface{}{
		r.rows[0].TabID,
		r.rows[0].OrderID,
		r.rows[0].ScopedID,
		r.rows[0].MenuItemID,
		r.rows[0].Quantity,
		r.rows[0].Modifiers,
		r.rows[0].GuestOwners,
		r.rows[0].CustomerOwners,
	}, nil
}

func (r iteratorForCreateOrderItems) Err() error {
	return nil
}

func (q *Queries) CreateOrderItems(ctx context.Context, arg []CreateOrderItemsParams) (int64, error) {
	return q.db.CopyFrom(ctx, []string{"order_item"}, []string{"tab_id", "order_id", "scoped_id", "menu_item_id", "quantity", "modifiers", "guest_owners", "customer_owners"}, &iteratorForCreateOrderItems{rows: arg})
}
