// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package repository

import (
	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

type Customer struct {
	ID           uuid.UUID        `json:"id"`
	LoginID      string           `json:"login_id"`
	Email        string           `json:"email"`
	PasswordHash string           `json:"password_hash"`
	Name         string           `json:"name"`
	PhoneNumber  pgtype.Text      `json:"phone_number"`
	CreatedAt    pgtype.Timestamp `json:"created_at"`
	UpdatedAt    pgtype.Timestamp `json:"updated_at"`
}

type GuestIDSequence struct {
	TabID uuid.UUID `json:"tab_id"`
	Value int32     `json:"value"`
}

type MenuItem struct {
	ID              int16            `json:"id"`
	Name            string           `json:"name"`
	Description     pgtype.Text      `json:"description"`
	PhotoPathinfo   pgtype.Text      `json:"photo_pathinfo"`
	Price           int32            `json:"price"`
	PortionSize     int16            `json:"portion_size"`
	Available       bool             `json:"available"`
	ModifiersConfig []byte           `json:"modifiers_config"`
	CreatedAt       pgtype.Timestamp `json:"created_at"`
	UpdatedAt       pgtype.Timestamp `json:"updated_at"`
	DeletedAt       pgtype.Timestamp `json:"deleted_at"`
}

type MenuItemTag struct {
	MenuItemID int16 `json:"menu_item_id"`
	MenuTagID  int16 `json:"menu_tag_id"`
}

type MenuTag struct {
	ID          int16            `json:"id"`
	Value       string           `json:"value"`
	Description pgtype.Text      `json:"description"`
	Dimension   pgtype.Int2      `json:"dimension"`
	CreatedAt   pgtype.Timestamp `json:"created_at"`
	UpdatedAt   pgtype.Timestamp `json:"updated_at"`
}

type MenuTagDimension struct {
	ID          int16            `json:"id"`
	Value       string           `json:"value"`
	Description pgtype.Text      `json:"description"`
	CreatedAt   pgtype.Timestamp `json:"created_at"`
	UpdatedAt   pgtype.Timestamp `json:"updated_at"`
}

type MenuTagPrerequisite struct {
	MenuTagID         int16 `json:"menu_tag_id"`
	PrerequisiteTagID int16 `json:"prerequisite_tag_id"`
}

type Order struct {
	TabID    uuid.UUID        `json:"tab_id"`
	ScopedID int16            `json:"scoped_id"`
	SentAt   pgtype.Timestamp `json:"sent_at"`
}

type OrderIDSequence struct {
	TabID uuid.UUID `json:"tab_id"`
	Value int16     `json:"value"`
}

type OrderItem struct {
	TabID          uuid.UUID   `json:"tab_id"`
	OrderID        int16       `json:"order_id"`
	ScopedID       int16       `json:"scoped_id"`
	MenuItemID     int16       `json:"menu_item_id"`
	Quantity       int16       `json:"quantity"`
	Modifiers      []byte      `json:"modifiers"`
	GuestOwners    []int16     `json:"guest_owners"`
	CustomerOwners []uuid.UUID `json:"customer_owners"`
}

type OrderItemIDSequence struct {
	TabID   uuid.UUID `json:"tab_id"`
	OrderID int16     `json:"order_id"`
	Value   int32     `json:"value"`
}

type OrderItemWithMenu struct {
	TabID           uuid.UUID   `json:"tab_id"`
	OrderID         int16       `json:"order_id"`
	ScopedID        int16       `json:"scoped_id"`
	MenuItemID      int16       `json:"menu_item_id"`
	Quantity        int16       `json:"quantity"`
	Modifiers       []byte      `json:"modifiers"`
	GuestOwners     []int16     `json:"guest_owners"`
	CustomerOwners  []uuid.UUID `json:"customer_owners"`
	Name            string      `json:"name"`
	Description     pgtype.Text `json:"description"`
	PhotoPathinfo   pgtype.Text `json:"photo_pathinfo"`
	Price           int32       `json:"price"`
	PortionSize     int16       `json:"portion_size"`
	ModifiersConfig []byte      `json:"modifiers_config"`
}

type OrderWithItems struct {
	TabID    uuid.UUID           `json:"tab_id"`
	ScopedID int16               `json:"scoped_id"`
	SentAt   pgtype.Timestamp    `json:"sent_at"`
	Items    []OrderItemWithMenu `json:"items"`
}

type Tab struct {
	ID         uuid.UUID        `json:"id"`
	TotalPrice int32            `json:"total_price"`
	CreatedAt  pgtype.Timestamp `json:"created_at"`
	ClosedAt   pgtype.Timestamp `json:"closed_at"`
	GuestNames map[int16]string `json:"guest_names"`
}

type TabWithOrders struct {
	ID         uuid.UUID        `json:"id"`
	TotalPrice int32            `json:"total_price"`
	CreatedAt  pgtype.Timestamp `json:"created_at"`
	ClosedAt   pgtype.Timestamp `json:"closed_at"`
	GuestNames map[int16]string `json:"guest_names"`
	Orders     []OrderWithItems `json:"orders"`
}

type Visitation struct {
	TabID      uuid.UUID `json:"tab_id"`
	CustomerID uuid.UUID `json:"customer_id"`
}
